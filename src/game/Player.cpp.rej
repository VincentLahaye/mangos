***************
*** 23089,23091 ****
              SetFFAPvP(false);
      }
  }
--- 23100,23139 ----
              SetFFAPvP(false);
      }
  }
+ 
+ /** World of Warcraft Armory **/
+ void Player::WriteWowArmoryDatabaseLog(uint32 type, uint32 data)
+ {
+  /*
+  Log types:
+  1 - achievement feed
+  2 - loot feed
+  3 - boss kill feed
+  */
+  uint32 pGuid = GetGUIDLow();
+  sLog.outDetail("WoWArmory: write feed log (guid: %u, type: %u, data: %u", pGuid, type, data);
+  if (type <= 0 || type > 3) // Unknown type
+  {
+  sLog.outError("WoWArmory: unknown type id: %d, ignore.", type);
+  return;
+  }
+  if (type == 3) // Do not write same bosses many times - just update counter.
+  {
+  uint8 Difficulty = GetMap()->GetDifficulty();
+  QueryResult *result = CharacterDatabase.PQuery("SELECT counter FROM character_feed_log WHERE guid='%u' AND type=3 AND data='%u' AND difficulty='%u' LIMIT 1", pGuid, data, Difficulty);
+  if (result)
+  {
+  CharacterDatabase.PExecute("UPDATE character_feed_log SET counter=counter+1, date=UNIX_TIMESTAMP(NOW()) WHERE guid='%u' AND type=3 AND data='%u' AND difficulty='%u' LIMIT 1", pGuid, data, Difficulty);
+  }
+  else
+  {
+  CharacterDatabase.PExecute("INSERT INTO character_feed_log (guid, type, data, date, counter, difficulty) VALUES('%u', '%d', '%u', UNIX_TIMESTAMP(NOW()), 1, '%u')", pGuid, type, data, Difficulty);
+  }
+  delete result;
+  }
+  else
+  {
+  CharacterDatabase.PExecute("REPLACE INTO character_feed_log (guid, type, data, date, counter) VALUES('%u', '%d', '%u', UNIX_TIMESTAMP(NOW()), 1)", pGuid, type, data);
+  }
+ }
+ /** World of Warcraft Armory **/